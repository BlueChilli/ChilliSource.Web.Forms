$susy: (columns: $grid-cols, gutters: 1 / 4, gutter-position: inside);

.container {
  padding-left: gutter() * 2;
  padding-right: gutter() * 2;
}

.row {
  @extend %clearfix;
  margin-right: -#{gutters()};
  margin-left: -#{gutters()};
}

@mixin row($gutter-width) {
  @extend %clearfix;
  margin-right: -#{gutter($gutter-width)};
  margin-left: -#{gutter($gutter-width)};
  & > * {
    padding-right: gutter($gutter-width) !important;
    padding-left: gutter($gutter-width) !important;
  }
}

@mixin push($number-of-cols) {
  position: relative;
  left: span($number-of-cols);
}

@mixin pull($number-of-cols) {
  position: relative;
  right: span($number-of-cols);
}

@for $i from 1 through $grid-cols {
  .mobile-col-#{$i} {
    @include span($i);
  }
  @include breakpoint($mobile-only) {
    .mobile-offset-#{$i} {
      @include pre($i);
    }
    .mobile-push-#{$i} {
      @include push($i);
    }
    .mobile-pull-#{$i} {
      @include pull($i);
    }
  }
}

@for $i from 1 through $grid-cols {
  @include breakpoint($mobile) {
    .tablet-col-#{$i} {
      @include span($i);
    }
  }

  @include breakpoint($tablet-only) {
    .tablet-offset-#{$i} {
      @include pre($i);
    }
    .tablet-push-#{$i} {
      @include push($i);
    }
    .tablet-pull-#{$i} {
      @include pull($i);
    }
  }
}

@for $i from 1 through $grid-cols {
  @include breakpoint($tablet) {
    .desktop-col-#{$i} {
      @include span($i);
    }
    .desktop-offset-#{$i} {
      @include pre($i);
    }
    .desktop-push-#{$i} {
      @include push($i);
    }
    .desktop-pull-#{$i} {
      @include pull($i);
    }
  }
}